buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "net.researchgate:gradle-release:2.4.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: "jacoco"
    apply plugin: "maven"
    apply plugin: "maven-publish"

    repositories {
        jcenter()
    }

    dependencies {
        compile "io.dropwizard:dropwizard-core:${dropwizardVersion}"
        compile "org.apache.camel:camel-core:${camelVersion}"
        testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    check.dependsOn jacocoTestReport

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
        classifier "sources"
        extension "jar"
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier "javadoc"
        extension "jar"
    }

    artifacts {
        archives sourcesJar, javadocJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar {
                    classifier "sources"
                }

                artifact javadocJar {
                    classifier "javadoc"
                }

                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
            }
        }
    }

    group = "com.commercehub.dropwizard"
    sourceCompatibility = "1.8"

    apply plugin: "net.researchgate.release"
    apply plugin: "com.jfrog.bintray"

    release {
        git {
            requireBranch = ''
        }
    }

    bintray {
        user = project.hasProperty("bintrayUserName") ? bintrayUserName : null
        key = project.hasProperty("bintrayApiKey") ? bintrayApiKey : null
        publications = ["mavenJava"]
        pkg {
            repo = "main"
            userOrg = "commercehub-oss"
            licenses = ['Apache-2.0']
        }
    }

    bintrayUpload.dependsOn build, sourcesJar, javadocJar

    createReleaseTag.dependsOn bintrayUpload
}
